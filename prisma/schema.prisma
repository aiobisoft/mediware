// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Suppliers {
  id            Int        @id @default(autoincrement())
  emails        String
  name          String
  city          String
  telephones    String
  addressLine1  String
  addressLine2  String?
  whatsapps     String?
  NTN           String?
  STN           String?
  licenseNumber String?
  TNNumber      String?
  TRNNumber     String?
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime?  @default(now())
  deletedAt     DateTime?  @default(dbgenerated("NULL"))
  Invoices      Invoices[]
}

model Medicines {
  id                Int                @id @default(autoincrement())
  name              String
  code              String?            @unique
  suplierCode       String?
  formula           String?
  brand             String?
  type              String?
  numStrips         Int?               @default(dbgenerated("NULL"))
  numOfUnitsOnStrip Int?               @default(dbgenerated("NULL"))
  packing           String
  unitTakePrice     Float
  InvoiceMedicines  InvoiceMedicines[]
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now())
  deletedAt         DateTime?          @default(dbgenerated("NULL"))
  SaleInvoiceItems  SaleInvoiceItems[]
}

model Invoices {
  id               Int                @id @default(autoincrement())
  invoiceNumber    String             @unique
  invoiceDate      DateTime           @default(now())
  salesTax         Float              @default(0.0)
  deliveredBy      String?
  bookingDriver    String?
  status           String?
  advTax           Float?             @default(0.0)
  total            Float
  received         Float?             @default(0)
  balance          Float?             @default(0)
  Supplier         Suppliers          @relation(fields: [supplierId], references: [id])
  supplierId       Int
  InvoiceMedicines InvoiceMedicines[]
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @default(now())
  deletedAt        DateTime?          @default(dbgenerated("NULL"))
}

model InvoiceMedicines {
  id                 Int       @id @default(autoincrement())
  batchIdentifier    String
  expirey            DateTime
  unitSalePrice      Float
  discountPercentage Float     @default(0.0)
  gst                Float     @default(0.0)
  discountedAmount   Float     @default(0.0)
  advTax             Float     @default(0.0)
  quantity           Int
  medicineId         Int
  Medicine           Medicines @relation(fields: [medicineId], references: [id])
  invoiceId          Int
  Invoice            Invoices  @relation(fields: [invoiceId], references: [id])
  netAmount          Float
  createdAt          DateTime? @default(now())
  updatedAt          DateTime? @default(now())
  deletedAt          DateTime? @default(dbgenerated("NULL"))
}

model Users {
  id           Int       @id @default(autoincrement())
  Role         Roles     @relation(fields: [roleId], references: [id])
  roleId       Int
  username     String    @unique
  email        String    @unique
  password     String
  telephone    String?
  addressLine1 String?
  addressLine2 String?
  lastLoginAt  DateTime? @default(now())
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @default(now())
  deletedAt    DateTime? @default(dbgenerated("NULL"))
}

model Roles {
  id          Int           @id @default(autoincrement())
  User        Users[]
  Permissions Permissions[]
}

model Resources {
  id          Int           @id @default(autoincrement())
  name        String
  Permissions Permissions[]
}

model Actions {
  id          Int           @id @default(autoincrement())
  action      String
  Permissions Permissions[]
}

model Permissions {
  id          Int       @id @default(autoincrement())
  roleId      Int
  Role        Roles     @relation(fields: [roleId], references: [id])
  resourcesId Int
  Resource    Resources @relation(fields: [resourcesId], references: [id])
  actionsId   Int
  Action      Actions   @relation(fields: [actionsId], references: [id])
}

model SaleInvoices {
  id            Int                @id @default(autoincrement())
  saleInvoiceId String             @unique
  Items         SaleInvoiceItems[]
  customerName  String
  telephone     String?
  email         String?
  address       String?
  whatsapp      String?
  dicountPrice  Float
  totalRecieved Float
  createdAt     DateTime?          @default(now())
  updatedAt     DateTime?          @default(now())
  deletedAt     DateTime?          @default(dbgenerated("NULL"))
}

model SaleInvoiceItems {
  id                   Int           @id @default(autoincrement())
  SaleInvoices         SaleInvoices? @relation(fields: [saleInvoicesId], references: [id])
  saleInvoicesId       Int?
  Medicine             Medicines     @relation(fields: [medicinesId], references: [id])
  medicinesId          Int
  quantity             Int
  comments             String
  unitSalePrice        Float
  quantitySoldFromPack Int           @default(1)
  createdAt            DateTime?     @default(now())
  updatedAt            DateTime?     @default(now())
  deletedAt            DateTime?     @default(dbgenerated("NULL"))
}
